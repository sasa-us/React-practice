install nodejs 
npm install create-react-app
create project folder 'react-complete-guide'
if create-react-app react-complete-guide --scripts-version 1.1.5 not works
use:
npx create-react-app react-complete-guide --scripts-version 1.1.5

run:
cd react-complete-guide
npm start

it will show on 
  Local:            http://localhost:3000/
  On Your Network:  http://192.168.1.187:3000/


//----
component is class 
need mport React, {Component} from 'react';
use method render (); to render to DOM
class use same name as file name
// jsx
className vs class 
wrap everything in 1 div root element return 

// react all about component
component is just a function, which return jsx (html in js)
es6 use const

JSX & Component
Component is the core building block of React 
Component tree- root component App ->infinity nested child components
Component need return / render JSX (HTML) to DOM
reuseable
JSX is not HTML, just looks like class->className
JSX is suntactic sugar for js, allow you to write HTMLish code instead by use html style (React.createElement)

create component
1 functional component
const cmp = () => { return ( <div> JSX HERE </div>);}
should use functional component as ofen as posibale 
because you should use state carefully
have state in all component and manipulate anywhere in app make app unpredictable and hard to manage



2 class component . container / stateful components
class Cmp extends Component {
  render() { return <div> JSX HERE </div>}
}

use { } to wrap js func for dynamic use
----------------------------------------------------
props: outside info
pass data from parent wraping component  to a child by < />  
pass valued parameter between different js file and output them
Person=(props)=> {  {props.name}}

use class based component use {this.props}

<component />
<component> </component>
{props.children} could output anything between closing tag component <></>
------------------------------------------------------
state: inside class component info
inside component
special property: state only use by class component (like constructor)
state's change will rerender& update DOM

------------------------------
40 event handler func use arrow func
if not arrow func, this will not refer to this func
then button use {this.xx}

reference: different event handler
https://reactjs.org/docs/events.html#supported-events